{
	"info": {
		"_postman_id": "8b4bddb3-6531-44e5-9a3a-5a2288f85334",
		"name": "CRUD Producto API",
		"description": "Servicio RESTful creado con Flask y PostgreSQL para realizar operaciones CRUD sobre una entidad \"Producto\":\n\n<img src=\"https://content.pstmn.io/e0b6f63c-b385-403d-9750-5f913233d4b1/aW1hZ2UucG5n\" alt=\"\" height=\"204\" width=\"276\">",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "37528562"
	},
	"item": [
		{
			"name": "Crear Producto",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"nombre\": \"Yerba Playadito\",\r\n  \"descripcion\": \"Yerba para mate\",\r\n  \"precio\": 999.90,\r\n  \"cantidad\": 25\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/producto",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"producto"
					]
				},
				"description": "Ruta POST para crear un producto. Se requiere:\n\n- A. Enviar mediante el body con formato json todos los campos presentes en la tabla(nombre,descripcion,precio y cantidad) sin el \"id\" ya que es auto-incremental.\n    \n\nEn caso de que no cumplir con el inciso A, devolvera un error en forma de mensaje con el codigo 500, indicando la falta de algun campo, o el ingreso de algun tipo en el campo el cual no es valido."
			},
			"response": []
		},
		{
			"name": "Obtener Productos",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"nombre\": \"Yerba Playadito\",\r\n  \"descripcion\": \"Yerba para mate\",\r\n  \"precio\": 999.90,\r\n  \"cantidad\": 25\r\n}\r\n"
				},
				"url": {
					"raw": "http://localhost:5000/producto",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"producto"
					]
				},
				"description": "Ruta para obtener todos los productos desde la base de datos."
			},
			"response": []
		},
		{
			"name": "Obtener Producto por Id",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"nombre\": \"Yerba Playadito\",\r\n  \"descripcion\": \"Yerba para mate\",\r\n  \"precio\": 999.90,\r\n  \"cantidad\": 25\r\n}\r\n"
				},
				"url": {
					"raw": "http://localhost:5000/producto/6",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"producto",
						"6"
					]
				},
				"description": "Ruta GET para obtener un producto por id. Se requiere:\n\n- A. Enviar mediante la URL el id del producto, siguiento la estructura '/producto/'. El id debe ser valido y existir en la base de datos.\n    \n\nEn caso de no cumplir el inciso A porque el id no se encuentra en la base de datos, se indicara mediante un mensaje un error de servidor interno numero 404, remarcando que no se encontro el id.\n\nEn caso de no cumplir el inciso A porque el id proporcionado mediante la URL es invalido, se indicara mediante un mensaje el error de servidor interno numero 500, remarcando que no se pudo completar la solicitud por un error inesperado."
			},
			"response": []
		},
		{
			"name": "Actualizar Producto",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"nombre\": \"Yerba Rosamonte\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/producto/6",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"producto",
						"6"
					]
				},
				"description": "Ruta PUT para actualizar un producto. Se requiere:\n\n- A. Enviar el id del mismo mediante la URL, el mismo debe ser valido y existir dentro de los productos almacenados en la base de datos.\n    \n- B. Enviar por el body todos los campos que se quieran actualizar, respetando los tipos de datos declarados.\n    \n\nEn caso de no cumplir con el punto A por un id erroneo, devolvera un error 404 , el cual notifica desde el servidor que no se encontro el elemento seleccionado.\n\nEn caso de no cumplir con el punto A por no enviar id, devolvera un error 500, notificando el error en actualizar ya que no es posible actualizar un producto sin enviar su id.\n\nEn caso de no cumplir con el punto B por no enviar todos los campos,devolvera un error 500, notificando el error en intentar colocar informacion en los campos que no corresponde a su tipo de dato."
			},
			"response": []
		},
		{
			"name": "Borrar Producto",
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"nombre\": \"Yerba Rosamonte\",\r\n  \"descripcion\": \"Yerba para mate con palo\",\r\n  \"precio\": 999.90,\r\n  \"cantidad\": 25\r\n}\r\n"
				},
				"url": {
					"raw": "http://localhost:5000/producto/6",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"producto",
						"6"
					]
				},
				"description": "Ruta DELETE para eliminar un producto por id. Se requiere:\n\n- A. Enviar mediante la URL el id del producto, siguiento la estructura '/producto/'. El id debe ser valido y existir en la base de datos.\n    \n\nEn caso de no cumplir el inciso A porque el id no se encuentra en la base de datos, se indicara mediante un mensaje un error de servidor interno numero 404, remarcando que no se encontro el id.\n\nEn caso de no cumplir el inciso A porque el id proporcionado mediante la URL es invalido, se indicara mediante un mensaje el error de servidor interno numero 500, remarcando que no se pudo completar la solicitud por un error inesperado."
			},
			"response": []
		}
	]
}